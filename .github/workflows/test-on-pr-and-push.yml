# This workflow builds the app when triggered by a pull request to main and is used for
# validation of pull requests. Assets are uploaded upon completion.

# Created using https://github.com/tauri-apps/tauri-action/blob/dev/examples/test-build-only.yml

name: test-on-pr-and-push
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

# This workflow will build your tauri app without uploading it anywhere.

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "macos-latest" # for Arm based macs (M1 and above).
            args: "--target aarch64-apple-darwin"
          - platform: "macos-13" # for Intel based macs.
            args: "--target x86_64-apple-darwin"
          - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
            args: ""
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-13' || matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf
        # webkitgtk 4.0 is for Tauri v1 - webkitgtk 4.1 is for Tauri v2.
        # You can remove the one that doesn't apply to your app to speed up the workflow a bit.

      - name: install frontend dependencies
        run: npm install # change this to npm, pnpm or bun depending on which one you use.

      # If tagName and releaseId are omitted tauri-action will only build the app and won't try to upload any asstes.
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          args: ${{ matrix.args }}

      - name: Upload build artifact - Ubuntu
        if: matrix.platform == 'ubuntu-22.04'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: src-tauri/target/release/bundle/deb/*.deb

      - name: Upload build artifact - Mac (Intel)
        if: matrix.platform == 'macos-13'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-x86-build
          path: src-tauri/target/release/bundle/dmg/*.dmg

      - name: Upload build artifact - Mac (Arm)
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-aarch64-build
          path: src-tauri/target/release/bundle/dmg/*.dmg

      - name: Upload build artifact - Windows
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform }}-build
          path: src-tauri/target/release/bundle/msi/*.msi
